steps:
  # Build the docker image
  - name: gcr.io/cloud-builders/docker
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/$_TERMINUS_SITE:pr-$_PR_NUMBER-$SHORT_SHA', '.' ]
    dir: 'frontity'

  # Push the image to GCR
  - name: gcr.io/cloud-builders/docker
    args: [ 'push', 'gcr.io/$PROJECT_ID/$_TERMINUS_SITE:pr-$_PR_NUMBER-$SHORT_SHA' ]

  # Deploy the image to cloud run
  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - $_TERMINUS_SITE
      - '--image'
      - gcr.io/$PROJECT_ID/$_TERMINUS_SITE:pr-$_PR_NUMBER-$SHORT_SHA
      - '--region'
      - us-central1
      - '--platform'
      - managed
      - '--allow-unauthenticated'
      - '--max-instances'
      - "2"
      - '--no-traffic'
      - '--revision-suffix'
      - 'pr-${_PR_NUMBER}-$SHORT_SHA'
      - "--update-env-vars"
      - "TERMINUS_SITE=${_TERMINUS_SITE},TERMINUS_ENV=pr-${_PR_NUMBER}"
  
  # Adding a new revision tag to generate https://pr-#---<TERMINUS_SITE>-<HASH>.a.run.app
  - name: gcr.io/cloud-builders/gcloud
    args: 
      - alpha 
      - run 
      - services 
      - update-traffic 
      - $_TERMINUS_SITE
      - --platform
      - managed 
      - --region 
      - us-central1 
      - --remove-tags 
      - pr-${_PR_NUMBER}

  # Adding a new revision tag to generate https://pr-#---<TERMINUS_SITE>-<HASH>.a.run.app
  - name: gcr.io/cloud-builders/gcloud
    args: 
      - alpha 
      - run 
      - services 
      - update-traffic 
      - $_TERMINUS_SITE
      - --platform
      - managed 
      - --region 
      - us-central1 
      - --set-tags 
      - pr-${_PR_NUMBER}=${_TERMINUS_SITE}-pr-${_PR_NUMBER}--$SHORT_SHA

images:
  - gcr.io/$PROJECT_ID/$_TERMINUS_SITE:pr-$_PR_NUMBER-$SHORT_SHA